/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package testeweka;

import java.io.File;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JList;
import weka.associations.Apriori;
import weka.core.Instances;
import weka.core.converters.ConverterUtils.DataSource;
import weka.filters.Filter;
import weka.filters.unsupervised.attribute.NumericToNominal;
import weka.filters.unsupervised.attribute.Remove;

/**
 *
 * @author carlos
 */
public class InterfacePrograma extends javax.swing.JFrame {
    private DefaultListModel lista            = new DefaultListModel();
    private DefaultListModel listaSelecionado = new DefaultListModel();
    int[] indices;
    /**
     * Creates new form InterfacePrograma
     */
    DataSource ds;
    Instances data;
    public InterfacePrograma() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listaAtributo = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaAtributoSelecionado = new javax.swing.JList<>();
        removerAtributo2 = new javax.swing.JButton();
        adicionarAtributo2 = new javax.swing.JButton();
        btGerar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        textoResultado = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        textQtdeArea = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        listaAtributo.setName("listaAtrinuto"); // NOI18N
        jScrollPane1.setViewportView(listaAtributo);

        jButton1.setText("Importar Arquivo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(listaAtributoSelecionado);

        removerAtributo2.setText("<<");
        removerAtributo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerAtributo2ActionPerformed(evt);
            }
        });

        adicionarAtributo2.setText(">>");
        adicionarAtributo2.setName("adicionarAtributo"); // NOI18N
        adicionarAtributo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarAtributo2ActionPerformed(evt);
            }
        });

        btGerar.setText("Gerar");
        btGerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGerarActionPerformed(evt);
            }
        });

        textoResultado.setColumns(20);
        textoResultado.setRows(5);
        jScrollPane3.setViewportView(textoResultado);

        jLabel1.setText("Atributos");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Tela de CÃ¡lculos para o Apriori");

        jLabel3.setText("Atributos Removidos");

        jLabel4.setText("Regras");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(156, 156, 156))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE))
                                .addGap(101, 101, 101)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(removerAtributo2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(adicionarAtributo2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textQtdeArea, javax.swing.GroupLayout.Alignment.LEADING))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btGerar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(adicionarAtributo2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removerAtributo2)
                        .addGap(30, 30, 30)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textQtdeArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(btGerar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formWindowActivated
    private void carregarArquivo(String caminho) throws Exception{
        System.out.println(caminho);
        //caminho = "src/testeweka/respostas.arff";
        ds = new DataSource(caminho);
        data = ds.getDataSet();
        
        data.setClassIndex(data.numAttributes() - 1);

        Apriori apriori = new Apriori();
        apriori.setClassIndex(data.classIndex());
        apriori.buildAssociations(data);
        
        ArrayList<Atributo> atributos = new ArrayList();
        indices = new int[data.numAttributes()];
        for (int i = 0; i < data.numAttributes(); i++) {
            Atributo a = new Atributo();
            a.setNome(data.attribute(i).name());
            ArrayList<String> valores = new ArrayList();
            for (int j = 0; j < data.attribute(i).numValues(); j++) {
                valores.add(data.attribute(i).value(j));
            }
            a.setValores(valores);
            atributos.add(a);
            indices[i] = i + 1;
        }
        
        for (Atributo a : atributos) {
            lista.addElement(a.getNome());
            //System.out.println(a.getNome() + ": " + a.getValores());
        }
        listaAtributo.setModel(lista);
        //System.out.println(listaAtributo.getModel().getElementAt(1).toString());
    }
            
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
 //       lista.addElement("teste");
 //       listaAtributo.setModel(lista);
        File arquivos  = null;
        JFileChooser fc = new JFileChooser();
        fc.setDialogTitle("Escolha o(s) arquivo(s)...");
        fc.setDialogType(JFileChooser.OPEN_DIALOG);
        fc.setApproveButtonText("OK");
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fc.setMultiSelectionEnabled(true);
        int resultado = fc.showOpenDialog(fc);
        
        try {
             if (resultado == JFileChooser.APPROVE_OPTION){
               arquivos = fc.getSelectedFile();
                 try {
                     this.carregarArquivo(arquivos.getPath());
                 } catch (Exception ex) {
                     Logger.getLogger(InterfacePrograma.class.getName()).log(Level.SEVERE, null, ex);
                 }
             }
            //this.carregarArquivo("");
            
            // listaAtributo = new JList(lista);  
        } catch (Exception ex) {
            Logger.getLogger(InterfacePrograma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void adicionarAtributo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarAtributo2ActionPerformed
        // TODO add your handling code here:
        listaSelecionado.addElement(listaAtributo.getModel().getElementAt(listaAtributo.getSelectedIndex()).toString());
        listaAtributoSelecionado.setModel(listaSelecionado);
        lista.remove(listaAtributo.getSelectedIndex());
        //listaAtributo.remove(listaAtributo.getSelectedIndex());
    }//GEN-LAST:event_adicionarAtributo2ActionPerformed

    
    private void removerAtributo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerAtributo2ActionPerformed
        // TODO add your handling code here:
        lista.addElement(listaAtributoSelecionado.getModel().getElementAt(listaAtributoSelecionado.getSelectedIndex()).toString());
        listaAtributo.setModel(lista);
        listaSelecionado.remove(listaAtributoSelecionado.getSelectedIndex());
    }//GEN-LAST:event_removerAtributo2ActionPerformed

    private void btGerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGerarActionPerformed
        // TODO add your handling code here:
        //DataSource ds;
        String associationRules = null;
        //int[] indices = new int[listaSelecionado.getSize()];
        String [] valor = new String[2];
        String valorRemovido;
        try {
           // ds = new DataSource("");
            
          //  Instances data = ds.getDataSet();
          //  data.setClassIndex(data.numAttributes() - 1);

          //  Apriori apriori = new Apriori();
          //  apriori.setClassIndex(data.classIndex());
          //  apriori.buildAssociations(data);
            
            Remove remove = new Remove();
            Instances newData  = data;
            Instances novoDado = data;
         //   System.out.println(listaSelecionado.getElementAt(1).toString());
         
            ArrayList<String> valores = new ArrayList();
            valor[0] = "-R";
            valorRemovido = "";
            
            for (int i = 0; i < listaSelecionado.size(); i++){
             // indices[i] = data.attribute(listaSelecionado.getElementAt(i).toString()).index();
              valor[1]   = valor[1] +  "" + data.attribute(listaSelecionado.getElementAt(i).toString()).index();
              
            //  if (i != listaSelecionado.size() -1){
              valor[1] = valor[1] + ","  ;
              
              valorRemovido = valorRemovido + data.attribute(listaSelecionado.getElementAt(i).toString()).index() + ",";
            //  }   
            }
            
            
            associationRules(data, indices, valorRemovido);
            
            
         //   remove.setAttributeIndicesArray(indices);
         //   remove.setInvertSelection(false);
           // System.out.println(novoDado);
        //    try {
        //      remove.setOptions(valor);
        //      remove.setInputFormat(data);
              //newData = Filter.useFilter(novoDado, remove);
        //    } catch (Exception e) {
        //      e.printStackTrace();
        //    }
        //System.out.println(remove.toString());
        //    try {
        //      remove.setOptions(valor);
        //      remove.setInputFormat(novoDado);
        //      newData = Filter.useFilter(novoDado, remove);
        //    } catch (Exception e) {
        //      e.printStackTrace();
        //    }
            
           /*
           System.out.println(newData.toString());

           Instances filteredData = newData;
  	   NumericToNominal filter = new NumericToNominal();
  	   try {
              filter.setOptions(valor);
              filter.setInputFormat(filteredData);
              filteredData = Filter.useFilter(newData, filter);
           } catch (Exception e1) {
              e1.printStackTrace();
           }
           */
  	   /*
           Apriori aprioriObj = new Apriori();
  	//aprioriObj.setNumRules(Integer.valueOf(jTextFieldRegras.getText()));
  	   try {
             aprioriObj.buildAssociations(filteredData);
           } catch (Exception e) {
              e.printStackTrace();
           }
  	   associationRules = aprioriObj.toString();
  	   System.out.println("A Priori Rules: "+associationRules);
           */
         
        } catch (Exception ex) {
            Logger.getLogger(InterfacePrograma.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //System.out.println(data.toString());

        
    }//GEN-LAST:event_btGerarActionPerformed

     public void associationRules(Instances data, int[] indexes, String atributosRemovidos) throws Exception{
     
        String associationRules = null;
        Instances newData = data;
        String[] options = new String[2];
        options[0] = "-R";
        options[1] = atributosRemovidos;
        Remove remove = new Remove();
        remove.setAttributeIndicesArray(indexes);
        remove.setInvertSelection(false);
        System.out.println("REMOVIDOS = " +atributosRemovidos);
        //System.out.println(remove.toString());
        try {
            remove.setOptions(options);
            remove.setInputFormat(data);
            newData = Filter.useFilter(data, remove);
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        System.out.println(newData.toString());

        Instances filteredData = newData;
  	NumericToNominal filter = new NumericToNominal();
  	try {
            filter.setOptions(options);
            filter.setInputFormat(filteredData);
            filteredData = Filter.useFilter(newData, filter);
        } catch (Exception e1) {
            e1.printStackTrace();
        }
  	
  	Apriori aprioriObj = new Apriori();
  	aprioriObj.setNumRules(Integer.valueOf(textQtdeArea.getText()));
  	try {
            aprioriObj.buildAssociations(filteredData);
        } catch (Exception e) {
            e.printStackTrace();
        }
  	textoResultado.setText(aprioriObj.toString());
  	System.out.println("A Priori Rules: "+associationRules);
     
        
     
    }
     
    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfacePrograma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfacePrograma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfacePrograma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfacePrograma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        

        /* Create and display the form */
          
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfacePrograma().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton adicionarAtributo2;
    private javax.swing.JButton btGerar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> listaAtributo;
    private javax.swing.JList<String> listaAtributoSelecionado;
    private javax.swing.JButton removerAtributo2;
    private javax.swing.JTextField textQtdeArea;
    private javax.swing.JTextArea textoResultado;
    // End of variables declaration//GEN-END:variables
}
